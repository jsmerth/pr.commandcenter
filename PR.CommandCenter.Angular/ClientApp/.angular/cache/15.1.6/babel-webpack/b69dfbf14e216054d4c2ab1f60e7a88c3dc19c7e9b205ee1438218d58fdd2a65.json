{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchDataComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.testFilter());\n    });\n    i0.ɵɵtext(1, \"Filter\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.clearFilter());\n    });\n    i0.ɵɵtext(1, \"Clear\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FetchDataComponent_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"ul\")(2, \"li\", 9)(3, \"a\", 10);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_div_4_div_2_Template_a_click_3_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.clickBotId());\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"li\", 9)(6, \"a\", 10);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_div_4_div_2_Template_a_click_6_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.clickBotProperty(ctx_r12.bots.business));\n    });\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"li\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"li\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const bot_r9 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(bot_r9.id);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(bot_r9.business);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", bot_r9.city, \", \", bot_r9.region, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(bot_r9.country);\n  }\n}\nfunction FetchDataComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5);\n    i0.ɵɵtemplate(2, FetchDataComponent_div_4_div_2_Template, 12, 5, \"div\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.bots);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.bots = [];\n    this._bots = [];\n    this.clickBotId = () => {\n      console.log('clickbotid');\n    };\n    http.get('http://localhost:7234/api/Bots').subscribe(result => {\n      this._bots = result.items;\n      this.bots = result.items;\n    }, error => console.error(error));\n  }\n  testFilter() {\n    this.bots = this._bots.filter((v, i, a) => {\n      return v.country === 'Mexico';\n    });\n  }\n  clearFilter() {\n    this.bots = this._bots;\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 5,\n  vars: 4,\n  consts: [[4, \"ngIf\"], [\"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"flex flex-row flex-grow\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"flex\", \"flex-row\", \"flex-grow\"], [1, \"flex\", \"flex-col\", \"flex-grow\", \"basis-2/3\", \"mr-2\", \"asset-list\"], [\"class\", \"asset\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"map\", 1, \"flex\", \"basis-1/3\"], [1, \"asset\"], [1, \"\"], [1, \"\", 3, \"click\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, FetchDataComponent_p_0_Template, 3, 0, \"p\", 0);\n      i0.ɵɵtemplate(1, FetchDataComponent_button_1_Template, 2, 0, \"button\", 1);\n      i0.ɵɵelement(2, \"br\");\n      i0.ɵɵtemplate(3, FetchDataComponent_button_3_Template, 2, 0, \"button\", 1);\n      i0.ɵɵtemplate(4, FetchDataComponent_div_4_Template, 4, 1, \"div\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.bots);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.bots);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.bots);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.bots);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\".asset-list[_ngcontent-%COMP%]   .asset[_ngcontent-%COMP%] {\\n  font-family: 'Axiforma', sans-serif;\\n  font-weight: normal;\\n  font-size: 13px;\\n  background-color: #fff;\\n  border: 2px solid #fff;\\n  border-radius: 3px;\\n  margin-bottom: 4px;\\n  padding: 10px;\\n  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.05);\\n}\\n.asset-list[_ngcontent-%COMP%]   .asset[_ngcontent-%COMP%]:hover {\\n  cursor: pointer;\\n  background-color: rgba(255, 255, 255, 0.5);\\n  box-shadow: 2px 2px 1px rgba(0, 0, 0, 0.05);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmV0Y2gtZGF0YS9mZXRjaC1kYXRhLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksbUNBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7RUFDQSxzQkFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7RUFDQSwyQ0FBQTtBQUFKO0FBRUk7RUFDRSxlQUFBO0VBQ0EsMENBQUE7RUFDQSwyQ0FBQTtBQUFOIiwic291cmNlc0NvbnRlbnQiOlsiLmFzc2V0LWxpc3Qge1xuICAuYXNzZXQge1xuICAgIGZvbnQtZmFtaWx5OiAnQXhpZm9ybWEnLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgYm94LXNoYWRvdzogMXB4IDFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcblxuICAgICY6aG92ZXIge1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjUpO1xuICAgICAgYm94LXNoYWRvdzogMnB4IDJweCAxcHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgICB9XG4gIH1cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;IAAAA,yBAAiB;IAAIA,0BAAU;IAAAA,iBAAK;;;;;;IAEpCA,iCAAoE;IAApCA;MAAAA;MAAA;MAAA,OAASA,kCAAY;IAAA,EAAC;IAAcA,sBAAM;IAAAA,iBAAS;;;;;;IAEnFA,iCAAqE;IAArCA;MAAAA;MAAA;MAAA,OAASA,mCAAa;IAAA,EAAC;IAAcA,qBAAK;IAAAA,iBAAS;;;;;;IAI/EA,8BAA4C;IAEfA;MAAAA;MAAA;MAAA,OAASA,mCAAY;IAAA,EAAC;IAACA,YAAY;IAAAA,iBAAI;IAChEA,6BAAa;IAAYA;MAAAA;MAAA;MAAA,OAASA,8DAA+B;IAAA,EAAC;IAACA,YAAkB;IAAAA,iBAAI;IACzFA,0BAAI;IAAAA,YAAgC;IAAAA,iBAAK;IACzCA,2BAAI;IAAAA,aAAiB;IAAAA,iBAAK;;;;IAHsBA,eAAY;IAAZA,+BAAY;IACOA,eAAkB;IAAlBA,qCAAkB;IACjFA,eAAgC;IAAhCA,+DAAgC;IAChCA,eAAiB;IAAjBA,oCAAiB;;;;;IAP7BA,8BAAkD;IAE9CA,0EAOM;IACRA,iBAAM;IACNA,yBAA2C;IAC7CA,iBAAM;;;;IAViCA,eAAO;IAAPA,qCAAO;;;ACA9C,OAAM,MAAOC,kBAAkB;EAI7BC,YAAYC,IAAgB,EAAsBC,OAAe;IAH1D,SAAI,GAAW,EAAE;IAChB,UAAK,GAAW,EAAE;IAiBnB,eAAU,GAAG,MAAK;MACvBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IAC3B,CAAC;IAhBCH,IAAI,CAACI,GAAG,CAAQ,gCAAgC,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MACnE,IAAI,CAACC,KAAK,GAAGD,MAAM,CAACE,KAAK;MACzB,IAAI,CAACC,IAAI,GAAGH,MAAM,CAACE,KAAK;IAC1B,CAAC,EAAEE,KAAK,IAAIR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEOC,UAAU;IACf,IAAI,CAACF,IAAI,GAAG,IAAI,CAACF,KAAK,CAACK,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,KAAI;MACxC,OAAOF,CAAC,CAACG,OAAO,KAAK,QAAQ;IAC/B,CAAC,CAAC;EACJ;EACOC,WAAW;IAChB,IAAI,CAACR,IAAI,GAAG,IAAI,CAACF,KAAK;EACxB;;AAlBWT,kBAAkB;mBAAlBA,kBAAkB,4DAIS,UAAU;AAAA;AAJrCA,kBAAkB;QAAlBA,kBAAkB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR/BzB,+DAAwC;MAExCA,yEAAmF;MACnFA,qBAAM;MACNA,yEAAmF;MAEnFA,mEAYM;;;MAlBFA,gCAAW;MAEyCA,eAAU;MAAVA,+BAAU;MAETA,eAAU;MAAVA,+BAAU;MAE7BA,eAAU;MAAVA,+BAAU","names":["i0","FetchDataComponent","constructor","http","baseUrl","console","log","get","subscribe","result","_bots","items","bots","error","testFilter","filter","v","i","a","country","clearFilter","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\50.Work\\53.Code\\PringleRobotics\\PR.CommandCenter\\PR.CommandCenter.Angular\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","D:\\50.Work\\53.Code\\PringleRobotics\\PR.CommandCenter\\PR.CommandCenter.Angular\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<p *ngIf=\"!bots\"><em>Loading...</em></p>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"testFilter()\" *ngIf=\"bots\">Filter</button>\r\n<br />\r\n<button class=\"btn btn-primary\" (click)=\"clearFilter()\" *ngIf=\"bots\">Clear</button>\r\n\r\n<div class=\"flex flex-row flex-grow\" *ngIf=\"bots\">\r\n  <div class=\"flex flex-col flex-grow basis-2/3 mr-2 asset-list\">\r\n    <div class=\"asset\" *ngFor=\"let bot of bots\">\r\n      <ul>\r\n        <li class=\"\"><a class=\"\" (click)=\"clickBotId()\">{{ bot.id }}</a></li>\r\n        <li class=\"\"><a class=\"\" (click)=\"clickBotProperty(bots.business)\">{{ bot.business }}</a></li>\r\n        <li>{{ bot.city }}, {{ bot.region }}</li>\r\n        <li>{{ bot.country }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <div class=\"flex basis-1/3\" id=\"map\"></div>\r\n</div>","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html',\r\n  styleUrls: ['./fetch-data.component.less']\r\n})\r\nexport class FetchDataComponent {\r\n  public bots: IBot[] = [];\r\n  private _bots: IBot[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<IBots>('http://localhost:7234/api/Bots').subscribe(result => {\r\n      this._bots = result.items;\r\n      this.bots = result.items;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  public testFilter() {\r\n    this.bots = this._bots.filter((v, i, a) => {\r\n      return v.country === 'Mexico'\r\n    });\r\n  }\r\n  public clearFilter() {\r\n    this.bots = this._bots;\r\n  }\r\n  public clickBotId = () => {\r\n    console.log('clickbotid');\r\n  }\r\n}\r\n\r\ninterface IBots {\r\n  items: IBot[]\r\n}\r\ninterface IBot {\r\n  id: string,\r\n  business: string,\r\n  city: string,\r\n  region: string,\r\n  country: string,\r\n  lat: number,\r\n  lon: number,\r\n  dateModified: Date,\r\n  dateCreated: Date,\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}